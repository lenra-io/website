- const headerGroups = {};

mixin displayPageLink(p)
    - const name = t(`translation:page.${p.name}.name`)
    - const path = p.path || `${p.name}.html`
    if (p.disabled)
        a(href=path disabled aria-disabled="true" tabindex="-1" title="Coming soon")= name
    else if (p.name == currentPage.basicPath)
        a.current(href=path)= name
    else 
        a(href=path)= name

mixin displayPageGroup(group, pages)
    each page in pages
        +displayPageLink(page)

mixin displayNavElement(element)
    - var type = typeof element
    if (type == 'string')
        - var pages = headerGroups[element]
        if (pages.length==1)
            +displayPageLink(pages[0])
        else
            +displayPageGroup(t(`translation:pageGroup.${element}`), pages)
    else 
        +displayPageLink(element)

mixin headerTitle()
    h1 !{t(`translation:page.${currentPage.basicPath}.title`, {context: "html", interpolation: {escapeValue: false}})}
    if currentPage.subtitle
        h2 !{currentPage.subtitle}
- const headerClass = currentPage.basicPath=="index" ? "invert-colors" : ""
header(class=headerClass)
    nav.menu
        - const items = pageList.filter(p => !p.notOnTop).flatMap(p => {
        -    if (!p.group) return [p];
        -    if (!headerGroups[p.group]) {
        -        headerGroups[p.group] = [p];
        -        return p.group;
        -    }
        -    else {
        -        headerGroups[p.group].push(p);
        -        return [];
        -    }
        - });

        each el in items
            +displayNavElement(el)

    block header
        +headerTitle()
        block header_content
            if currentPage.headerTexts
                each text  in currentPage.headerTexts
                    p= text
            if currentPage.mainAction
                a.btn.primary(href=currentPage.mainAction.href)= currentPage.mainAction.text